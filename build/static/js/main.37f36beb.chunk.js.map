{"version":3,"sources":["services/persons.js","components/PersonForm.js","components/Persons.js","components/Filter.js","components/Message.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","values","setters","handlers","newName","newNumber","persons","setNewName","setNewNumber","setPersons","setNotification","setError","handleNameChange","handleNumberChange","showNotification","message","setTimeout","onSubmit","event","preventDefault","newPerson","name","number","length","findIndex","person","window","confirm","personService","updatedPerson","catch","addedPerson","concat","value","onChange","type","Person","onClick","filter","Persons","setter","toUpperCase","includes","map","key","Filter","handler","Notification","className","Error","App","useState","newFilter","setNewFilter","notification","error","useEffect","initPersons","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37f36beb.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n  getAll, \n  create, \n  update,\n  remove\n}","import React from 'react'\nimport personService from '../services/persons'\n\nconst PersonForm = ({ values, setters, handlers }) => {\n  const [newName, newNumber, persons] = values\n  const [setNewName, setNewNumber, setPersons, setNotification, setError] = setters\n  const [handleNameChange, handleNumberChange] = handlers\n\n  const showNotification = (message) => {\n    setNotification(message)\n    setTimeout(() => {\n      setNotification(null)\n    }, 3000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1,\n    }\n\n    const id = persons.findIndex(person => person.name === newName)\n    if (id !== -1) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n        .update(persons[id].id, newPerson)\n        .then((updatedPerson) => {\n          persons[id] = updatedPerson\n          setPersons([...persons])\n          showNotification(`Updated ${newName}'s number`)\n         })\n        .catch(() => {\n          setError(`Information of ${newName} has already been removed from server`)\n          setTimeout(() => {\n            setError(null)\n          }, 3000)\n        })\n      }\n    } else {\n      personService\n      .create(newPerson)\n      .then((addedPerson) => {\n        setPersons(persons.concat(addedPerson))\n        showNotification(`Added ${newName}`)\n      })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  return (\n    <>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input\n            value={newName}\n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input\n            value={newNumber}\n            onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default PersonForm","import React from 'react'\nimport personService from '../services/persons'\n\nconst Person = ({ person, persons, setPersons }) => {\n  const { id, name, number } = person\n\n  const deletePerson = () => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      personService.remove(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }\n\n  return (\n    <>\n      {name} {number} <button onClick={deletePerson}>delete</button><br />\n    </>\n  )\n}\n\nconst Persons = ({ persons, filter, setter }) => {\n  const rows = () => persons\n    .filter(person => person.name.toUpperCase().includes(filter.toUpperCase()))  \n    .map(person =>\n    <Person\n      key={person.id}\n      person={person}\n      persons={persons}\n      setPersons={setter}\n    />)  \n\n  return (\n    <>\n      {rows()}\n    </>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ filter, handler }) => {\n  return (\n    <>\n      <div>\n        filter shown with <input\n          value={filter}\n          onChange={handler}\n        />\n      </div>\n    </>\n  )\n}\n\nexport default Filter","import React from 'react'\nimport './Message.css'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"info\">\n      {message}\n    </div>\n  )\n}\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport { \n  Notification,\n  Error,\n}","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport { Notification, Error } from './components/Message'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initPersons => {\n        setPersons(initPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Error message={error} />\n      <Filter filter={newFilter} handler={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        values={[newName, newNumber, persons]}\n        setters={[setNewName, setNewNumber, setPersons, setNotification, setError]}\n        handlers={[handleNameChange, handleNumberChange]}\n      />\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={newFilter} setter={setPersons}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}